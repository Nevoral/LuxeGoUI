// Package tags do not edit, this file was autogenerated.
package tags

import spec "github.com/Nevoral/LuxeGoUI/Specification"

func StopSvg() *StopTagSvg {
	return &StopTagSvg{
		tag: &tag{
			name:                "stop",
			attributes:          nil,
			supportedAttributes: nil,
			tagType:             spec.SelfClosingType,
			namespace:           spec.SVG,
			children:            nil,
			textContent:         "",
			parent:              nil,
			nestingLevel:        0,
			renderFormat:        DefaultHtml,
		},
	}
}

type StopTagSvg struct {
	*tag
}

/*
************************************************************************************************************************
*-------------------------------------------------- Extension Method --------------------------------------------------*
************************************************************************************************************************
 */

/*
CustomAttribute - This is method for adding custom attribute, that are not in HTML5 specification.
*/
func (s *StopTagSvg) CustomAttribute(attributes ...*Attribute) *StopTagSvg {
	s.registerAttributes(attributes...)
	return s
}

/*
************************************************************************************************************************
*------------------------------------------------ Specific Attributes -------------------------------------------------*
************************************************************************************************************************
 */

/*
Offset -
*/
func (s *StopTagSvg) Offset(value string) *StopTagSvg {
	if s.attributes == nil {
		s.attributes = []*Attribute{}
	}
	s.registerAttribute("offset", value)
	return s
}

/*
StopColor -
*/
func (s *StopTagSvg) StopColor(value string) *StopTagSvg {
	if s.attributes == nil {
		s.attributes = []*Attribute{}
	}
	s.registerAttribute("stop-color", value)
	return s
}

/*
StopOpacity -
*/
func (s *StopTagSvg) StopOpacity(value string) *StopTagSvg {
	if s.attributes == nil {
		s.attributes = []*Attribute{}
	}
	s.registerAttribute("stop-opacity", value)
	return s
}
