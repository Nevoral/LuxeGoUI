// Package tags do not edit, this file was autogenerated.
package tags

import spec "github.com/Nevoral/LuxeGoUI/Specification"

func LinkHtml() *LinkTagHtml {
	return &LinkTagHtml{
		tag: &tag{
			name:                "link",
			attributes:          nil,
			supportedAttributes: nil,
			tagType:             spec.SelfClosingType,
			namespace:           spec.HTML,
			children:            nil,
			textContent:         "",
			parent:              nil,
			nestingLevel:        0,
			renderFormat:        DefaultHtml,
		},
	}
}

type LinkTagHtml struct {
	*tag
}

/*
************************************************************************************************************************
*-------------------------------------------------- Extension Method --------------------------------------------------*
************************************************************************************************************************
 */

/*
CustomAttribute - This is method for adding custom attribute, that are not in HTML5 specification.
*/
func (l *LinkTagHtml) CustomAttribute(attributes ...*Attribute) *LinkTagHtml {
	l.registerAttributes(attributes...)
	return l
}

/*
************************************************************************************************************************
*------------------------------------------------ Specific Attributes -------------------------------------------------*
************************************************************************************************************************
 */

/*
As -
*/
func (l *LinkTagHtml) As(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("as", value)
	return l
}

/*
Blocking -
*/
func (l *LinkTagHtml) Blocking(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("blocking", value)
	return l
}

/*
Crossorigin -
*/
func (l *LinkTagHtml) Crossorigin(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("crossorigin", value)
	return l
}

/*
Disabled -
*/
func (l *LinkTagHtml) Disabled() *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("disabled", "")
	return l
}

/*
Fetchpriority -
*/
func (l *LinkTagHtml) Fetchpriority(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("fetchpriority", value)
	return l
}

/*
Href -
*/
func (l *LinkTagHtml) Href(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("href", value)
	return l
}

/*
Hreflang -
*/
func (l *LinkTagHtml) Hreflang(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("hreflang", value)
	return l
}

/*
Imagesizes -
*/
func (l *LinkTagHtml) Imagesizes(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("imagesizes", value)
	return l
}

/*
Imagesrcset -
*/
func (l *LinkTagHtml) Imagesrcset(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("imagesrcset", value)
	return l
}

/*
Integrity -
*/
func (l *LinkTagHtml) Integrity(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("integrity", value)
	return l
}

/*
Media -
*/
func (l *LinkTagHtml) Media(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("media", value)
	return l
}

/*
Referrerpolicy -
*/
func (l *LinkTagHtml) Referrerpolicy(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("referrerpolicy", value)
	return l
}

/*
Rel -
*/
func (l *LinkTagHtml) Rel(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("rel", value)
	return l
}

/*
Sizes -
*/
func (l *LinkTagHtml) Sizes(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("sizes", value)
	return l
}

/*
Type - Specifies the type of an <input> element.
Specifies the type of an <input> element.
*/
func (l *LinkTagHtml) Type(value string) *LinkTagHtml {
	if l.attributes == nil {
		l.attributes = []*Attribute{}
	}
	l.registerAttribute("type", value)
	return l
}
