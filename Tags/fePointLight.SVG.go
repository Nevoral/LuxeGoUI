// Package tags do not edit, this file was autogenerated.
package tags

import spec "github.com/Nevoral/LuxeGoUI/Specification"

func FePointLightSvg() *FePointLightTagSvg {
	return &FePointLightTagSvg{
		tag: &tag{
			name:                "fePointLight",
			attributes:          nil,
			supportedAttributes: nil,
			tagType:             spec.SelfClosingType,
			namespace:           spec.SVG,
			children:            nil,
			textContent:         "",
			parent:              nil,
			nestingLevel:        0,
			renderFormat:        DefaultHtml,
		},
	}
}

type FePointLightTagSvg struct {
	*tag
}

/*
************************************************************************************************************************
*-------------------------------------------------- Extension Method --------------------------------------------------*
************************************************************************************************************************
 */

/*
CustomAttribute - This is method for adding custom attribute, that are not in HTML5 specification.
*/
func (f *FePointLightTagSvg) CustomAttribute(attributes ...*Attribute) *FePointLightTagSvg {
	f.registerAttributes(attributes...)
	return f
}

/*
************************************************************************************************************************
*------------------------------------------------ Specific Attributes -------------------------------------------------*
************************************************************************************************************************
 */

/*
X -
*/
func (f *FePointLightTagSvg) X(value string) *FePointLightTagSvg {
	if f.attributes == nil {
		f.attributes = []*Attribute{}
	}
	f.registerAttribute("x", value)
	return f
}

/*
Y -
*/
func (f *FePointLightTagSvg) Y(value string) *FePointLightTagSvg {
	if f.attributes == nil {
		f.attributes = []*Attribute{}
	}
	f.registerAttribute("y", value)
	return f
}

/*
Z -
*/
func (f *FePointLightTagSvg) Z(value string) *FePointLightTagSvg {
	if f.attributes == nil {
		f.attributes = []*Attribute{}
	}
	f.registerAttribute("z", value)
	return f
}
