// Package tags do not edit, this file was autogenerated.
package tags

import (
	"fmt"
	spec "github.com/Nevoral/LuxeGoUI/Specification"
)

func TextSvg(tags []any) *TextTagSvg {
	node := &TextTagSvg{
		tag: &tag{
			name:                "text",
			attributes:          nil,
			supportedAttributes: nil,
			tagType:             spec.FullTagType,
			namespace:           spec.SVG,
			children:            nil,
			textContent:         "",
			parent:              nil,
			nestingLevel:        0,
			renderFormat:        DefaultHtml,
		},
	}
	return node.supportedChildrenCheck(tags)
}

type TextTagSvg struct {
	*tag
}

/*
************************************************************************************************************************
*-------------------------------------------------- Extension Method --------------------------------------------------*
************************************************************************************************************************
 */

/*
CustomAttribute - This is method for adding custom attribute, that are not in HTML5 specification.
*/
func (t *TextTagSvg) CustomAttribute(attributes ...*Attribute) *TextTagSvg {
	t.registerAttributes(attributes...)
	return t
}

/*
Children - Method for nesting tags into parent tag
*/
func (t *TextTagSvg) Children(tags ...any) *TextTagSvg {
	return t.supportedChildrenCheck(tags)
}

func (t *TextTagSvg) supportedChildrenCheck(tags []any) *TextTagSvg {
	for _, tagObj := range tags {
		switch val := tagObj.(type) {
		case string:
			t.registerChildren(TextContentSvg(val).getTag())
		case content:
			t.registerChildren(val.getTag())
		case []content:
			for _, child := range val {
				t.registerChildren(child.getTag())
			}
		default:
			panic(fmt.Sprintf("Unsupported content type. %v", val))
		}
	}
	return t
}

/*
************************************************************************************************************************
*------------------------------------------------ Specific Attributes -------------------------------------------------*
************************************************************************************************************************
 */

/*
Dx -
*/
func (t *TextTagSvg) Dx(value string) *TextTagSvg {
	if t.attributes == nil {
		t.attributes = []*Attribute{}
	}
	t.registerAttribute("dx", value)
	return t
}

/*
Dy -
*/
func (t *TextTagSvg) Dy(value string) *TextTagSvg {
	if t.attributes == nil {
		t.attributes = []*Attribute{}
	}
	t.registerAttribute("dy", value)
	return t
}

/*
LengthAdjust -
*/
func (t *TextTagSvg) LengthAdjust(value string) *TextTagSvg {
	if t.attributes == nil {
		t.attributes = []*Attribute{}
	}
	t.registerAttribute("lengthAdjust", value)
	return t
}

/*
Rotate -
*/
func (t *TextTagSvg) Rotate(value string) *TextTagSvg {
	if t.attributes == nil {
		t.attributes = []*Attribute{}
	}
	t.registerAttribute("rotate", value)
	return t
}

/*
TextLength -
*/
func (t *TextTagSvg) TextLength(value string) *TextTagSvg {
	if t.attributes == nil {
		t.attributes = []*Attribute{}
	}
	t.registerAttribute("textLength", value)
	return t
}

/*
X -
*/
func (t *TextTagSvg) X(value string) *TextTagSvg {
	if t.attributes == nil {
		t.attributes = []*Attribute{}
	}
	t.registerAttribute("x", value)
	return t
}

/*
Y -
*/
func (t *TextTagSvg) Y(value string) *TextTagSvg {
	if t.attributes == nil {
		t.attributes = []*Attribute{}
	}
	t.registerAttribute("y", value)
	return t
}
