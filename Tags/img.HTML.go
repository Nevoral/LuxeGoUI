// Package tags do not edit, this file was autogenerated.
package tags

import spec "github.com/Nevoral/LuxeGoUI/Specification"

func ImgHtml() *ImgTagHtml {
	return &ImgTagHtml{
		tag: &tag{
			name:                "img",
			attributes:          nil,
			supportedAttributes: nil,
			tagType:             spec.SelfClosingType,
			namespace:           spec.HTML,
			children:            nil,
			textContent:         "",
			parent:              nil,
			nestingLevel:        0,
			renderFormat:        DefaultHtml,
		},
	}
}

type ImgTagHtml struct {
	*tag
}

/*
************************************************************************************************************************
*-------------------------------------------------- Extension Method --------------------------------------------------*
************************************************************************************************************************
 */

/*
CustomAttribute - This is method for adding custom attribute, that are not in HTML5 specification.
*/
func (i *ImgTagHtml) CustomAttribute(attributes ...*Attribute) *ImgTagHtml {
	i.registerAttributes(attributes...)
	return i
}

/*
************************************************************************************************************************
*------------------------------------------------ Specific Attributes -------------------------------------------------*
************************************************************************************************************************
 */

/*
Alt -
*/
func (i *ImgTagHtml) Alt(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("alt", value)
	return i
}

/*
Crossorigin -
*/
func (i *ImgTagHtml) Crossorigin(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("crossorigin", value)
	return i
}

/*
Decoding -
*/
func (i *ImgTagHtml) Decoding(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("decoding", value)
	return i
}

/*
Elementtiming -
*/
func (i *ImgTagHtml) Elementtiming(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("elementtiming", value)
	return i
}

/*
Fetchpriority -
*/
func (i *ImgTagHtml) Fetchpriority(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("fetchpriority", value)
	return i
}

/*
Height -
*/
func (i *ImgTagHtml) Height(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("height", value)
	return i
}

/*
Ismap -
*/
func (i *ImgTagHtml) Ismap() *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("ismap", "")
	return i
}

/*
Loading -
*/
func (i *ImgTagHtml) Loading(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("loading", value)
	return i
}

/*
Referrerpolicy -
*/
func (i *ImgTagHtml) Referrerpolicy(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("referrerpolicy", value)
	return i
}

/*
Sizes -
*/
func (i *ImgTagHtml) Sizes(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("sizes", value)
	return i
}

/*
Src - Specifies the URL of an image.
Specifies the URL of an image.
*/
func (i *ImgTagHtml) Src(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("src", value)
	return i
}

/*
Srcset -
*/
func (i *ImgTagHtml) Srcset(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("srcset", value)
	return i
}

/*
Usemap -
*/
func (i *ImgTagHtml) Usemap(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("usemap", value)
	return i
}

/*
Width -
*/
func (i *ImgTagHtml) Width(value string) *ImgTagHtml {
	if i.attributes == nil {
		i.attributes = []*Attribute{}
	}
	i.registerAttribute("width", value)
	return i
}
